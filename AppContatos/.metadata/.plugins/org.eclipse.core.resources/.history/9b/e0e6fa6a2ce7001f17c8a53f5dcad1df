package br.com.dnl.AppContatos.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import br.com.dnl.AppContatos.model.Contatos;
import br.com.dnl.AppContatos.repository.ContatosRepository;

@Service
public class ContatosService {
	
	@Autowired
	private ContatosRepository contatoRepository;
	
	
	/*
	@AutoWired
	private PessoasRepository pessoaRepository
	*/
	
	/*
		public Contatos save(Contatos contato) {		
		
		if(contato.getPessoa().getId() != null) {
			
			Optional<Pessoas> findPessoa = pessoaRepository
					.findById(contato.getPessoas().getId());
			if(findProduto.isEmpty()) {
				System.out.println("Contato n√£o encontrado");
				return null;
			}else {
				estoque.setProduto(findProduto.get());
				return estoqueRepository.save(contato);
			}			
		}else {
			System.out.println("Produto nulo");
			return null;
		}		
	}
	*/
	
	
	// ------- ENCONTRAR PELO ID
	public Optional<Contatos> findById(Long id){
		return contatoRepository.findById(id);
	}
	
	// ---------- LISTAGEM
	public List<Contatos> findAll(){
		return contatoRepository.findAll();
	}
	
	public Contatos update(Contatos contato) {
		Optional<Contatos> findContato = contatoRepository
				.findById(contato.getId());
		if(findContato.isPresent()) {

			Contatos updcontato = findContato.get();
			updcontato.setTipo(contato.getTipo());
			updcontato.setContato(contato.getContato());

			return contatoRepository.save(updcontato);
		}
		return contatoRepository.save(contato);
	}
	
	public void delete(Long id) {
		contatoRepository.deleteById(id);
	}
	
}
